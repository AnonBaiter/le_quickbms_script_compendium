# Ubisoft Reflections - *.img/*.L##
# ---
# Stuntman (PS2)
# Driv3r (PS2, Xbox)
# Driver: Parallel Lines (PS2, Xbox)

math external = 0
get img_size asize
get img_sign long
get img_files long
get hardcoded_file_info_hash long
math initial_file_info_position = 0
math img_ver = 0
if img_sign == 0x32474d49 # IMG2
	xmath img_archive_info_size "img_files * 0x38"
	math initial_file_info_position = 0x0c
	math img_ver = 1
elif img_sign == 0x34474d49 # IMG4
	get img_archive_info_size long
	math initial_file_info_position = 0x10
	math img_ver = 2
endif
xmath img_is_xbox "(((img_archive_info_size + initial_file_info_position) >> 11) + 1) << 11"
# (todo) this is too rough for my tastes
if img_size = img_is_xbox
	math external = 1
	get img_name basename
endif

goto initial_file_info_position
if img_ver = 1
	math init_hash_number = 0x2eaa508
	for i = 0 < img_archive_info_size
		get byte_to_calc byte
		math init_hash_number + byte_to_calc
	next i
elif img_ver = 2
	# (todo) figure out the hashing algorithm for the header
endif
/*
math final_hash_number = init_hash_number
if final_hash_number != hardcoded_file_info_hash
	break
endif
*/
goto initial_file_info_position
log MEMORY_FILE 0 img_archive_info_size
if img_ver = 1
	math init_dec_number = 0x1b
	for i = 0 < img_archive_info_size
		get enc_byte byte
		math enc_byte - init_dec_number
		put enc_byte byte MEMORY_FILE
		math init_dec_number + 0x0b
		math init_dec_number & 0xff
	next i
	goto 0 MEMORY_FILE
	for i = 0 < img_files
		getdstring file_name 0x30 MEMORY_FILE
		get file_offset long MEMORY_FILE
		math file_offset << 11
		get file_size long MEMORY_FILE
		log file_name file_offset file_size
	next i
elif img_ver = 2
	math init_number_01 = 0x1b
	math init_number_02 = 0
	for i = 0 < img_archive_info_size
		get enc_byte byte
		xmath first_step "init_number_02 & 0x1f"
		math enc_byte - init_number_01
		put enc_byte byte MEMORY_FILE
		if first_step >= 7
			math init_number_01 + 0x0b
		else
			math init_number_01 + 0x15
		endif
		math init_number_01 & 0xff
		math init_number_02 + 1
	next i
	goto 0 MEMORY_FILE
	for i = 0 < img_files
		get hardcoded_file_name_hash long MEMORY_FILE
		get file_02 long MEMORY_FILE
		get file_size long MEMORY_FILE
		string temp_name p "%08x." hardcoded_file_name_hash
		if external = 0
			xmath file_offset "file_02 << 11"
			log temp_name file_offset file_size 0
		elif external = 1
			xmath file_offset "((file_02 >> 8) & 0xffffff) << 11"
			xmath img_layer_number_01 "(file_02 >> 4) & 0x0f"
			xmath img_layer_number_02 "file_02 & 0x0f"
			string img_layer_name p "%s.L%d%d" img_name img_layer_number_01 img_layer_number_02
			open FDSE img_layer_name 1
			log temp_name file_offset file_size 1
		endif
	next i
endif
