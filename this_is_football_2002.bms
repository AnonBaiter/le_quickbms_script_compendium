# SCEE London Studio/Team Soho/SCEE - *.PAK files

math main_info_offset == 0x190

getdstring pak_archive_sign 8
if pak_archive_sign != "SceeWhPC" && ARCHIVE_TYPE != "SceeWhPk"
	break
endif
getdstring pak_timestamp 20
get table_size long
get total_files long
getdstring random_garbage 0x80
for t1 = 0 < 28
	get file_name_offsets long
next t1
for t2 = 1 < 0x20
	getdstring file_extension 4
	putarray 1 t2 file_extension
next t2

goto main_info_offset
get directory_overall_entries long
get directory_info_size_01 long
if directory_overall_entries != 0 && directory_info_size_01 != 0
	# copy-pasted straight from aluigi's getaway.bms script
	savepos directory_info_offset
	xmath directory_entry_info_size "directory_overall_entries * 0x74"
	xmath directory_overall_base_offset "directory_info_offset + directory_entry_info_size"
    for directory = 0 < directory_overall_entries
    	math singular_directory_entries = 0
        getdstring directory_extension 4
        getdstring directory_name 0x60
        get directory_entries_01 long
        get directory_entries_02 long
        get directory_entries_03 long
        get directory_offset long
        savepos directory_temp_position_01
        math directory_offset + directory_overall_base_offset
        goto directory_offset
		if directory_entries_02 == 0 || directory_entries_02 == 1
			if directory_entries_01 > directory_entries_03
				math singular_directory_entries == directory_entries_01
			elif directory_entries_01 < directory_entries_03
				math singular_directory_entries == directory_entries_03
			elif directory_entries_01 == directory_entries_03
				math singular_directory_entries == directory_entries_03
			endif
		else
			xmath singular_directory_entries "(directory_entries_03 - directory_entries_02) + 1"
		endif
        for i = 0 < singular_directory_entries
            get file_size long
            get file_offset long
            if pak_archive_sign == "SceeWhPC"
                get file_name_hash long
            endif
            math file_offset << 11
            if file_size != 0
				string file_name p "%s\%d.%s" directory_name i directory_extension
                if file_size & 0xc0000000 # 0x40000000 and 0x80000000
					savepos directory_temp_position_02
					goto file_offset
					get original_file_size long
					goto directory_temp_position_02
                    math file_size & 0x3fffffff
					string TMP_NAME2 p "%s[compressed_0x%08x]" file_name original_file_size
                    log TMP_NAME2 file_offset file_size
                else
                    log file_name file_offset file_size
                endif
            endif
        next i
        goto directory_temp_position_01
    next directory
	xmath goto_info_offset "directory_overall_base_offset + directory_info_size_01"
else
	math goto_info_offset == 0x198
endif

goto goto_info_offset
set previous_file_name string ""

for
	get file_offset threebyte
	get name_recycling_number byte
	get name_size byte
	get file_id short
	get file_size long
	
	if pak_archive_sign == "SceeWhPC"
		get file_name_hash long
	endif
	
	if file_offset == 0
	if name_recycling_number == 0
	if name_size == 0
	if file_id == 0
	if file_size == 0
		break
	endif
	endif
	endif
	endif
	endif
	
	math file_offset << 11
	set individual_file_name string ""
	xmath last_name_byte "name_size - 1"
	for n = 0 < name_size
		get string_char byte
		if n = last_name_byte
			math extension_number = string_char
		endif
		string string_char = string_char
		string individual_file_name + string_char
	next n
	if name_recycling_number == 0
		set previous_file_name string individual_file_name
		strlen previous_name_size previous_file_name
		set file_name string individual_file_name
	endif
	if name_recycling_number != 0
		set incomplete_file_name string ""
		for n2 = 0 < name_recycling_number
			getvarchr string_char previous_file_name n2 byte
			string string_char = string_char
			string incomplete_file_name + string_char
		next n2
		string incomplete_file_name + individual_file_name
		set file_name string incomplete_file_name
		set previous_file_name string incomplete_file_name
	endif
	if extension_number <= 0x20
		getarray file_extension 1 extension_number
		string file_name - 1
		string file_name + "."
		string file_name + file_extension
	endif
	
	log file_name file_offset file_size
next

		else
			xmath ENTRIES "(ENTRIES3 - ENTRIES2) + 1"
		endif

        string NAME2 + \
		math i2 = 0
        for i = 0 < ENTRIES
            get FSIZE2 long
            get FOFFSET2 long
            if ARCHIVE_TYPE == "SceeWhPC"
                get NAME_CRC2 long
            endif
			math i2 + 1
			
            math FOFFSET2 << 11
            if FSIZE2 != 0
				string NAME3 p "%s%d.%s" NAME2 i2 EXT2
                if FSIZE2 & 0xc0000000 # 0x40000000 and 0x80000000
					savepos TMP2
					goto FOFFSET2
					get FZSIZE1 long
					goto TMP2
                    math FSIZE2 & 0x3fffffff
					string TMP_NAME2 p "%s[compressed_0x%08x]" NAME3 FZSIZE1
                    log TMP_NAME2 FOFFSET2 FSIZE2
                else
                    log NAME3 FOFFSET2 FSIZE2
                endif
            endif
        next i

        goto TMP1

    next FOLDER
	
	xmath INFO_OFF3 "INFO_OFF2 + SIZE1"
	log MEMORY_FILE2 INFO_OFF3 TABLE_SIZE
else
	xmath INFO_OFF4 "INFO_OFF1 + 8"
	log MEMORY_FILE2 INFO_OFF4 TABLE_SIZE
endif

putvarchr MEMORY_FILE 0x100 0
log MEMORY_FILE 0 0x100

for
	get FOFFSET threebyte MEMORY_FILE2
	get NAME_POS byte MEMORY_FILE2
	get NAME_SIZE byte MEMORY_FILE2
	get DUMMY34 short MEMORY_FILE2
	get FSIZE long MEMORY_FILE2
	
	if ARCHIVE_TYPE == "SceeWhPC"
		get NAME_CRC long MEMORY_FILE2
	endif
	
	if FOFFSET == 0
	if NAME_POS == 0
	if NAME_SIZE == 0
	if DUMMY34 == 0
	if FSIZE == 0
		break
	endif
	endif
	endif
	endif
	endif
	
	math FOFFSET << 11
	
	savepos TMP2 MEMORY_FILE2
	savepos NAME_TMP1 MEMORY_FILE2
	math NAME_TMP1 + NAME_SIZE
	math NAME_TMP1 - 1
	goto NAME_TMP1 MEMORY_FILE2
	get EXT_IDX byte MEMORY_FILE2

	if EXT_IDX <= 0x20
		xmath FULL_NAME_SIZE "(NAME_POS + NAME_SIZE) - 1"
		getarray FILE_EXT 10 EXT_IDX
		math NAME_SIZE - 1
		goto TMP2 MEMORY_FILE2
		getdstring NAME NAME_SIZE MEMORY_FILE2
		get EXT_IDX2 byte MEMORY_FILE2
	else
		xmath FULL_NAME_SIZE "NAME_POS + NAME_SIZE"
		goto TMP2 MEMORY_FILE2
		getdstring NAME NAME_SIZE MEMORY_FILE2
	endif
	
	if NAME_POS != 0
		savepos MTMP1 MEMORY_FILE
		goto NAME_POS MEMORY_FILE
		putct NAME string -1 MEMORY_FILE
		goto MTMP1 MEMORY_FILE
	else
		goto 0 MEMORY_FILE
		putct NAME string -1 MEMORY_FILE
	endif
	
	goto 0 MEMORY_FILE
	getdstring FULL_NAME FULL_NAME_SIZE MEMORY_FILE
	
	if EXT_IDX <= 0x20
		string FNAME p "%s.%s" FULL_NAME FILE_EXT
	else
		string FNAME p "%s" FULL_NAME
	endif
	
	log FNAME FOFFSET FSIZE
next
